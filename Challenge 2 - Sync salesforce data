Debug Code :- System.enqueueJob(new WarehouseCalloutService()); 
( Execute this after pasting the WarehouseCalloutService code below )

////////////////////////////////////////////////////////////////////////////////////////////////////////////

WarehouseCalloutService



public with sharing class WarehouseCalloutService implements Queueable, Database.AllowsCallouts {

    private static final String WAREHOUSE_URL = 'https://th-superbadge-apex.herokuapp.com/equipment';

    public void execute(QueueableContext context) {

        Http http = new Http();
        HttpRequest request = new HttpRequest();
        request.setEndpoint(WAREHOUSE_URL);
        request.setMethod('GET');

        HttpResponse response = http.send(request);

        if (response.getStatusCode() == 200) {
            List<Object> jsonResponse = (List<Object>) JSON.deserializeUntyped(response.getBody());
            List<Product2> warehouseProducts = new List<Product2>();

            for (Object obj : jsonResponse) {
                Map<String, Object> mapJson = (Map<String, Object>) obj;
                Product2 product = new Product2();

                product.Name = (String) mapJson.get('name');
                product.Replacement_Part__c = (Boolean) mapJson.get('replacement');
                product.Maintenance_Cycle__c = (Integer) mapJson.get('maintenanceperiod');
                product.Lifespan_Months__c = (Integer) mapJson.get('lifespan');
                product.Cost__c = (Decimal) mapJson.get('lifespan'); // placeholder as before
                product.Warehouse_SKU__c = (String) mapJson.get('sku');
                product.Current_Inventory__c = (Double) mapJson.get('quantity');

                warehouseProducts.add(product);
            }

            if (!warehouseProducts.isEmpty()) {
                upsert warehouseProducts Warehouse_SKU__c;
                System.debug('Equipment synced with Warehouse successfully (Queueable)');
            }
        }
    }
}
